---
import "@fontsource-variable/inter";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { ViewTransitions } from "astro:transitions";

interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="es" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="theme-color" content="#2ECC71" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta name="twitter:card" content="summary_large_image" />
    <ViewTransitions />

    <!-- Schema.org markup -->
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "Organization",
        "name": "KPI-Innova",
        "description": "Soluciones de automatización industrial y análisis de datos",
        "url": "https://kpi-innova.com",
        "logo": "https://kpi-innova.com/logo.svg"
      }
    </script>
  </head>
  <body class="bg-light dark:bg-dark text-dark dark:text-light">
    <Header />
    <slot />
    <Footer />
    <script>
      // Check for dark mode preference
      if (
        localStorage.theme === "dark" ||
        (!("theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }
    </script>
  </body>
</html>
